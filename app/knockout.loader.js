!function ($, window, document, undefined) { function Plugin(element, options) { var that = this; that.element = element, that.$element = $(element), that.viewModel = { Url: ko.observable(""), Data: null, Total: 0, IDs: null, Selected: { Title: ko.observable(""), ReadOnly: ko.observable(!1), Template: ko.observable(""), Item: ko.observable({}), Items: ko.observableArray([]), Count: ko.observable(-1) }, Page: { Number: ko.observable(-1), Size: ko.observable(0), MaxNumber: ko.observable(0), List: ko.observableArray([]), Show: function (t) { var e = that.viewModel.Page.Number(); return that.viewModel.Page.List().length <= 10 || 5 > e && 10 > t || t == e || e >= 5 && (e > t && 5 >= e - t || t > e && 5 >= t - e) } } }; var _currbtn = null, defaults = { pk: "Id", modal: "modal", data: null, rowMode: !1, init: function () { }, onLoaded: function () { }, onPreShowModal: function () { }, onShowModal: function () { }, onPreHideModal: function () { }, onHideModal: function () { }, callback: {}, valid: {} }; that.options = $.extend({}, defaults, options), (null == that.options.modal || that.options.modal == undefined || "" == that.options.modal) && (that.options.modal = "nosuchmodal"), that.options.init.apply(), that.load = function (t, e) { var a = e || 0, n = parseInt(that.$element.data("page-size") || 0); if (that.options.data) return void (a > 0 && a * n >= that.options.data.length ? that.viewModel.Page.Number(a - 1) : localBinding(that.options.data, a, n)); var l = function (t) { return t.indexOf("?") > 0 ? "&" : "?" }; t += l(t) + "random=" + Math.random(); var i = that.$element.data("all"); (null == i || i == undefined || "" == i) && (a > 0 && n > 0 && (t += l(t) + "skip=" + a * n), n > 0 && (t += l(t) + "take=" + n)), t && t.length > 0 && $.get(t, function (t) { 1 == t.Result && remoteBinding(t, n) }) }; var localBinding = function (t, e, a) { var n = t.length; if (that.viewModel.Total = n, that.viewModel.Page.List.removeAll(), n > 0 && a > 0) { that.viewModel.Page.Size(a); for (var l = Math.ceil(n / a), i = 0; l > i; i++) that.viewModel.Page.List.push(i) } var o = e * a, d = (e + 1) * a, r = t.slice(o, d); that.viewModel.Data ? ko.mapping.fromJS(r, {}, that.viewModel.Data) : (that.viewModel.Data = ko.mapping.fromJS(r), ko.applyBindings(that.viewModel, that.element)), setSelected(), that.options.onLoaded(t) }, remoteBinding = function (t, e) { var a = parseInt(t.RecordCount || that.$element.data("count") || 0), n = that.viewModel.Page.Number(); if (n > 0 && n * e >= a) return void that.viewModel.Page.Number(n - 1); if (that.viewModel.Total = a, that.viewModel.Page.List.removeAll(), a > 0 && e > 0) { that.viewModel.Page.Size(e); var l = Math.ceil(a / e), o = 0; for (that.viewModel.Page.MaxNumber(l), i = n; i > n - 5; i--) i >= 0 && (o++, that.viewModel.Page.List.push(i)); that.viewModel.Page.List.reverse(); var d = n + 10 - o; for (i = n + 1; d > i; i++) l > i && that.viewModel.Page.List.push(i) } that.viewModel.Data ? ko.mapping.fromJS(t.Data, {}, that.viewModel.Data) : (that.viewModel.Data = ko.mapping.fromJS(t.Data), ko.applyBindings(that.viewModel, that.element)), setSelected(), that.options.onLoaded(t) }, continuous = function () { for (var t = that.$element.find(':checkbox[id!="selAll"]'), e = !1, a = !1, n = 0; n < t.length; n++) { var l = $(t[n]).is(":checked"); if (!e && l && (e = !0), e && !l && (a = !0), e && a && l) return !1 } return e }, disableMoveUp = function () { return that.viewModel.Selected.Count() < 1 ? !0 : 0 == that.viewModel.Page.Number() && $(that.$element.find(':checkbox[id!="selAll"]:first')).is(":checked") ? !0 : !continuous() }, disableMoveDown = function () { return that.viewModel.Selected.Count() < 1 ? !0 : that.viewModel.Page.Number() == that.viewModel.Page.List().length - 1 && $(that.$element.find(':checkbox[id!="selAll"]:last')).is(":checked") ? !0 : !continuous() }, setSelected = function () { if (that.viewModel.Selected.Items.removeAll(), that.$element.find(':checkbox[id="selAll"]').length > 0) { var t = that.$element.find(':checkbox[id!="selAll"][checked]'); if (t && t.length > 0) for (var e = 0; e < t.length; e++) { var a = ko.dataFor(t[e]); 0 == e && that.viewModel.Selected.Item(a), that.viewModel.Selected.Items.push(a) } that.viewModel.Selected.Count(that.$element.find(':checkbox[id!="selAll"][checked]').length), that.$element.find(':checkbox[id="selAll"]').attr("checked", 0 == that.$element.find(':checkbox:not(:checked)[id!="selAll"]').length && that.$element.find(':checkbox[id!="selAll"]').length > 0) } else that.viewModel.Selected.Item(that.viewModel.Data); that.$element.find(':checkbox[id="selAll"]').each(function (t, e) { $(e).css("display", 0 == that.$element.find(':checkbox[id!="selAll"]').length ? "none" : "block") }) }; that.viewModel.Page.Number.subscribe(function (t) { var e = that.$element.data("url"); that.load(e, t) }), that.viewModel.Url.subscribe(function (t) { that.$element.data("url", t), that.load(t, 0) }), that.viewModel.Selected.Count.subscribe(function (t) { that.$element.find("#btnRelate").attr("disabled", 1 != t), that.$element.find("#btnEdit").attr("disabled", 1 != t), that.$element.find("#btnDelete").attr("disabled", 1 > t), that.$element.find("#btnUp").attr("disabled", disableMoveUp()), that.$element.find("#btnDown").attr("disabled", disableMoveDown()), that.$element.find("#btnEnable").attr("disabled", 1 > t), that.$element.find("#btnDisable").attr("disabled", 1 > t), that.$element.find("#btnPublish").attr("disabled", 1 != t), that.$element.find("#btnPublishData").attr("disabled", 1 > t), that.$element.find("#btnCancelPublish").attr("disabled", 1 > t), that.$element.find("#btnRelateMultCar").attr("disabled", 1 > t), that.$element.find("#btnDetail").attr("disabled", 1 != t), that.$element.find("#btnRelateCar").attr("disabled", 1 != t), that.$element.find("#btnPublishTrue").attr("disabled", 1 > t), that.$element.find("#btnPublishFalse").attr("disabled", 1 > t) }), that.viewModel.Page.Number(0), that.viewModel.Selected.Count(0), that.$element.on("click", "button[data-template-url],a[data-template-url]", function (t) { if ($(this).data("multimodal")) { var e = $(this), a = e.data("target"), n = $(a); t.preventDefault(), n.modal({ width: n.width(), left: 0, focusOn: "input:first", toggle: "modal" }).one("hide", function () { e.focus() }) } _currbtn = t.currentTarget, that.options.onPreShowModal.apply(_currbtn); var l = $(_currbtn), i = l.data("template-url"), o = $("#" + that.options.modal); "btnAdd" == l.attr("id") && that.$element.find(":checkbox").attr("checked", !1), setSelected(), that.viewModel.Selected.Title(l.data("title") || ""), that.viewModel.Selected.ReadOnly(l.data("readonly") ? !0 : !1), ko.applyBindings(that.viewModel.Selected, o.find(".modal-header")[0]), ko.applyBindings(that.viewModel.Selected, o.find(".modal-footer")[0]), i && "" != i && i != undefined && o.find(".modal-body").html("").css("scrollTop", 0).load(i, function () { var t = l.data("nobind"); (null == t || t == undefined || "" == t) && ko.applyBindings(that.viewModel.Selected.Item, o.find(".modal-body")[0]), that.options.onShowModal.apply(_currbtn) }) }), that.$element.find("#selAll").bind("click", function () { that.$element.find(":checkbox").attr("checked", this.checked), that.viewModel.Selected.Count(that.$element.find(':checkbox[id!="selAll"][checked]').length), setSelected() }), that.options.rowMode && (that.$element.find("tbody tr").live("hover", function () { $(this).css("cursor", "pointer") }), that.$element.find("tbody tr").live("click", function () { var t = $(this).find(":checkbox").first(); $(t).attr("checked", !$(t).is(":checked")), that.$element.find(':checkbox[id="selAll"]').attr("checked", that.$element.find(':checkbox[id!="selAll"][checked]').length == that.$element.find(':checkbox[id!="selAll"]').length), that.viewModel.Selected.Count(that.$element.find(':checkbox[id!="selAll"][checked]').length), setSelected() }), that.$element.find(':checkbox[id!="selAll"]').live("click", function (t) { that.$element.find(':checkbox[id="selAll"]').attr("checked", that.$element.find(':checkbox[id!="selAll"][checked]').length == that.$element.find(':checkbox[id!="selAll"]').length), that.viewModel.Selected.Count(that.$element.find(':checkbox[id!="selAll"][checked]').length), setSelected(), t.stopPropagation() })), that.$element.on("click", "a[data-page]", function (e) { var target = $(e.currentTarget), page = target.data("page"), currentPage = that.viewModel.Page.Number(), expression = /^\s*[+-]\d+\s*$/; if (expression.test(page)) { var newPage = eval("currentPage" + page); newPage >= 0 && newPage < that.viewModel.Page.MaxNumber() && that.viewModel.Page.Number(newPage) } else page >= 0 && page < that.viewModel.Page.MaxNumber() && that.viewModel.Page.Number(page); setSelected() }), that.$element.on("click", "button[data-url],a[data-url]", function (t) { var e = $(t.currentTarget); _currbtn = t.currentTarget; var a = e.data("url"), n = e.data("confirm") || "确认操作吗?"; if (confirm(n)) { var l = new Array; that.$element.find(':checkbox[id!="selAll"][checked]').each(function () { l.push($(this).attr("value")) }), $.ajax({ url: a, type: "post", data: [{ name: "ids", value: l }] }).done(function (t) { if (1 == t.Result) { var e = 0 == ($(_currbtn).attr("id") || "").length ? "nosuchkey" : $(_currbtn).attr("id"); that.options.callback[e] && "function" == typeof that.options.callback[e] && that.options.callback[e].apply(_currbtn, t), that.reload() } t.Message && t.Message.length > 0 && alert(t.Message) }).fail(function () { alert("操作失败") }) } }); var modal = that.options.modal; $("#" + modal).off().on("hide", function () { that.options.onPreHideModal.apply(_currbtn) }), $("#" + modal).off().on("hidden", function () { that.options.onHideModal.apply(_currbtn) }); var succeed = function (t, e) { if (1 == t.Result) { var a = 0 == ($(_currbtn).attr("id") || "").length ? "nosuchkey" : $(_currbtn).attr("id"); if (that.options.callback[a] && "function" == typeof that.options.callback[a] && that.options.callback[a](_currbtn, t), t.Reload) that.reload(); else if (t.Data) { if ("function" == typeof that.viewModel.Data) { var n = that.options.pk, l = ko.utils.arrayFirst(that.viewModel.Data(), function (e) { return e[n]() == t.Data[n] }); l ? ko.mapping.fromJS(t.Data, {}, l) : that.viewModel.Data.push(ko.mapping.fromJS(t.Data)) } else ko.mapping.fromJS(t.Data, {}, that.viewModel.Data); setSelected() } e || $("#" + that.options.modal).modal("hide") } t.Message && t.Message.length > 0 && alert(t.Message) } } var pluginName = "koLoader", version = "1.0.0"; Plugin.prototype = { reload: function () { var t = this, e = t.$element.data("url"); return this.load(e, t.viewModel.Page.Number()), t }, resetUrl: function (t) { return this.viewModel.Url(t), this.viewModel.Page.Number(0), this } }, $.fn[pluginName] = function (t) { return this.each(function () { $.data(this, pluginName) || $.data(this, pluginName, new Plugin(this, t)) }) }, String.prototype.format = function (t) { try { var e = new Date(+this.replace(/\/Date\((\d+)\)\//, "$1")); return e.format(t) } catch (a) { return "" } }, String.prototype.CLength = function () { var t = 0, e = 0; e = this.length; for (var a = 0; e > a; a++) { var n = this.charAt(a); t++, escape(n).length > 4 && t++ } return t }, Date.prototype.format = function (t) { return t = t.replace(/HH:mm/gi, (this.getHours() < 10 ? "0" : "") + this.getHours() + ":" + (this.getMinutes() < 10 ? "0" : "") + this.getMinutes()), t = t.replace(/HH/gi, (this.getHours() < 10 ? "0" : "") + this.getHours()), t = t.replace(/YYYY/gi, this.getFullYear()), t = t.replace(/MM/gi, (this.getMonth() < 9 ? "0" : "") + (this.getMonth() + 1)), t = t.replace(/DD/gi, (this.getDate() < 10 ? "0" : "") + this.getDate()), t = t.replace(/SS/gi, (this.getSeconds() < 10 ? "0" : "") + this.getSeconds()) }, String.prototype.startsWith = function (t) { return this.slice(0, t.length) == t }, String.prototype.endsWith = function (t) { return this.slice(-t.length) == t }, Number.prototype.towanyuan = function (t) { return null == t && (t = 2), (this / 1e4).toFixed(t) }, String.prototype.strlength = function () { for (var t = this.length, e = t, a = 0; t > a; a++) (this.charCodeAt(a) < 0 || this.charCodeAt(a) > 255) && e++; return e }, Number.prototype.setPointCarry = function (t) { return null == t && (t = 1), this.toFixed(t) }, Number.prototype.setPointNotCarry = function (t) { null == t && (t = 1); var e = this.toString().indexOf("."); return e > 0 ? this.toString().substring(0, e + 2) : this.toString().substring(0) + ".0" } }(jQuery, window, document);